import * as typescript_lib_tsserverlibrary from 'typescript/lib/tsserverlibrary';
import * as vue_component_meta from 'vue-component-meta';
import { M as ModuleOptions } from './options-280f2e3f.js';
import '@nuxt/schema';

declare function useComponentMetaParser({ outputDir, rootDir, components: _components, componentDirs, checkerOptions, exclude, transformers, debug }: ModuleOptions): {
    readonly checker: {
        updateFile(fileName: string, text: string): void;
        deleteFile(fileName: string): void;
        reload(): void;
        clearCache(): void;
        getExportNames: (componentPath: string) => string[];
        getComponentMeta: (componentPath: string, exportName?: string | undefined) => vue_component_meta.ComponentMeta;
        __internal__: {
            tsLs: typescript_lib_tsserverlibrary.LanguageService;
        };
    };
    readonly components: any;
    refreshChecker: () => void;
    stubOutput: () => Promise<void>;
    outputPath: string;
    updateOutput: (content?: string) => Promise<void>;
    fetchComponent: (component: string | any) => Promise<void>;
    fetchComponents: () => Promise<void>;
    getStringifiedComponents: () => string;
    getVirtualModuleContent: () => string;
};
type ComponentMetaParser = ReturnType<typeof useComponentMetaParser>;

export { ComponentMetaParser, useComponentMetaParser };
