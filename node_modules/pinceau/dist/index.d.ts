import { D as DefineConfigType } from './index-700b1958.js';
export { a2 as AdvancedPseudos, Y as BooleanVariant, K as BreakpointsTokens, t as CSSFunctionType, s as CSSProperties, _ as ClassVariant, p as ColorSchemeModes, r as ComputedStyleDefinition, q as ComputedStyleProp, o as ComputedStylesUtils, u as ConfigLayer, C as ConfigOrPaths, Q as ConfigSuggestion, w as ConfigTokens, I as DefaultThemeMap, G as DesignToken, z as DtFunction, Z as EnumVariant, F as FilterStartingWith, O as FontWeightTokens, L as LoadConfigResult, M as ModuleHooks, a as ModuleOptions, f as NativeMediaQueries, a6 as NativeProperties, N as NestedKeyOf, x as PermissiveConfigType, l as PinceauConfigContext, k as PinceauContext, j as PinceauMediaQueries, P as PinceauOptions, g as PinceauTheme, H as PinceauTokens, h as PinceauTokensPaths, n as PinceauTransformContext, i as PinceauUtils, v as PinceauUtilsProperties, m as PinceauVirtualContext, c as PrefixObjectKeys, a9 as PropertyValue, a4 as Pseudos, a5 as PseudosProperties, B as RawTokenType, R as ResolvedConfigLayer, E as ResponsiveToken, J as ScaleTokens, a3 as SimplePseudos, S as SuffixObjectKeys, a8 as SupportedProperties, T as ThemeGenerationOutput, a7 as ThemeKey, A as TokensFunction, y as TokensFunctionOptions, U as UnwrapKey, aa as UsableTokens, $ as Variant, X as VariantOptions, a0 as Variants, a1 as VuePseudos, V as VueQuery, W as WrapKey, d as WrapObjectKeys, e as WrapUnion, b as WrappedValue } from './index-700b1958.js';
export { g as get, p as palette } from './data-e0633942.js';
import 'vue';
import '#pinceau/theme';
import '#pinceau/utils';
import 'vite';
import 'untyped';
import 'csstype';

interface PinceauRuntimeIds {
    uid: string;
    componentId: string;
    uniqueClassName?: string;
}
type PinceauUidTypes = 'v' | 'c' | 'p';

declare function defineTheme(config: DefineConfigType): DefineConfigType;

export { DefineConfigType, PinceauRuntimeIds, PinceauUidTypes, defineTheme };
